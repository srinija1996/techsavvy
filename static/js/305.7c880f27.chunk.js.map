{"version":3,"file":"static/js/305.7c880f27.chunk.js","mappings":"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","sources":["pages/Login/index.tsx","utils/apiManager.ts","services/index.ts"],"sourcesContent":["import { DraftsOutlined, LockOpenOutlined } from \"@mui/icons-material\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Checkbox,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { loginService } from \"../../services\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport { AppContext } from \"../../App\";\r\n\r\nconst Login = () => {\r\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const context = useContext(AppContext);\r\n  const { isLoggedIn, setIsLoggedIn } = context;\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      navigate(\"/dashboard\");\r\n    }\r\n  });\r\n\r\n  const onChangeCredentials = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCredentials((prevState) => ({\r\n      ...prevState,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const onSignIn = (event: React.FormEvent<HTMLElement>) => {\r\n    setIsLoading(true);\r\n    loginService({ ...credentials, isLoggedInHere: isLoggedIn ? 1 : 0 })\r\n      .then((response: any) => {\r\n        localStorage.setItem(\"token\", JSON.stringify(response?.data?.token));\r\n        localStorage.setItem(\r\n          \"userDetails\",\r\n          JSON.stringify(response?.data?.userDetails)\r\n        );\r\n        if (setIsLoggedIn) setIsLoggedIn(true);\r\n        navigate(\"/dashboard\");\r\n      })\r\n      .catch((err) => {\r\n        if (typeof err?.response?.data?.message === \"string\") {\r\n          setError(err?.response?.data?.message);\r\n        } else\r\n          setError(\r\n            err?.response?.data?.message[0] || err?.response?.data?.message\r\n          );\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  if (isLoggedIn) return null;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        minHeight: \"100vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        background:\r\n          \"linear-gradient(to bottom right,#f7f8fa 5%,#f8e2fe 20%,#f5f5fc 80%,#7c7dfb 98%)\",\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          pt: 8,\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <img\r\n          src=\"https://techsavvy.ai/assets/images/common/logo/logo.svg\"\r\n          alt=\"logo\"\r\n          style={{ height: \"100px\", paddingBottom: \"100px\" }}\r\n          loading=\"lazy\"\r\n        />\r\n        <Card\r\n          sx={{\r\n            p: 10,\r\n            width: \"25%\",\r\n            backgroundColor: \"#fcfafd\",\r\n            border: \"solid 5px white\",\r\n            borderRadius: \"13px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h5\">Welcome Back!</Typography>\r\n          <form style={{ width: \"100%\" }} onSubmit={onSignIn}>\r\n            <Typography pb={1}>Email</Typography>\r\n            <Box\r\n              sx={{\r\n                border: \"solid 1px\",\r\n                borderRadius: \"8px\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                boxSizing: \"border-box\",\r\n                px: 2,\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <DraftsOutlined />\r\n              <TextField\r\n                sx={{ border: \"none\" }}\r\n                fullWidth\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                onChange={onChangeCredentials}\r\n                value={credentials.email}\r\n              />\r\n            </Box>\r\n            <Typography py={1}>Password</Typography>\r\n            <Box\r\n              sx={{\r\n                border: \"solid 1px\",\r\n                borderRadius: \"8px\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                boxSizing: \"border-box\",\r\n                px: 2,\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <LockOpenOutlined />\r\n              <TextField\r\n                sx={{ border: \"none\" }}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                fullWidth\r\n                onChange={onChangeCredentials}\r\n                value={credentials.password}\r\n              />\r\n              <Typography\r\n                sx={{\r\n                  minWidth: \"min-content\",\r\n                  textAlign: \"right\",\r\n                  color: \"#f449a3\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                variant=\"body2\"\r\n              >\r\n                Forgot Password?\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Box\r\n              sx={{\r\n                alignSelf: \"flex-end\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-end\",\r\n              }}\r\n            >\r\n              <Checkbox size=\"small\" />\r\n              <Typography variant=\"caption\">Remember me</Typography>\r\n            </Box>\r\n            {error && <Typography sx={{ color: \"red\" }}>{error}</Typography>}\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              disabled={isLoading}\r\n              onClick={onSignIn}\r\n              type=\"submit\"\r\n            >\r\n              SIGN IN\r\n            </Button>\r\n          </form>\r\n        </Card>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import axios from \"axios\";\r\n\r\nexport const apiManager = axios.create({\r\n  baseURL: \"https://coreapi.hectorai.live/api/day-parting\",\r\n  headers: {\r\n    \"X-USER-IDENTITY\":\r\n      \"U2FsdGVkX18lreBwDMZIZaWXmCA+9GGYXAFttifVV7ovRjRGNNlnl3F8QSfmgxbGrm4zk42ud8ygR0rZccDFlOVDj01aIUTjKrX6TNza+qoIkSe0xGH0MxBlUXrV+c+ULtgFHS9XcTXbrIGbSN1Cwt18SZK5UOGF3aavkG5ZGXwOAopznMUp4CJOxE9a7DzNsb0rJpsguSXehn+Fw0b6GT30m/c0+7Nhbtwi8GFflEgr8F41hE4jMoLwCEajSkxQhTxorAqtJRF0tlM5sUeAvBODqx4sZMB8MNv9v9NzQ7cA+P+FKB6VSS9QIwRx5PC4LQnmthfupakaZmnRL1YbZ56rPbt8lu3QSRS1yuV/GwRuCN3MBwaHitsgzMYEnAMiYGup+W/nbNsukqCXhSZGtg==\",\r\n    Authorization:\r\n      \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2OGI0ZTNhN2Y1YmU4ZDY2MjVlN2I0MiIsImZ1bGxOYW1lIjoiU3lzdGVtIFRlc3QiLCJlbWFpbCI6InRlc3RAZGV2LmNvbSIsInNlc3Npb25JZCI6InJhbmRvbVN0cmluZyIsImlhdCI6MTcyMDQwNjQzNH0.oo2gUHroTcJ7X-I0-hNvtuG4tq6sGL2yr4Veaf37JPc\",\r\n  },\r\n});\r\n","import axios, { AxiosResponse } from \"axios\";\r\nimport { apiManager } from \"../utils/apiManager\";\r\nimport { oneMonthAgo, todayString } from \"../utils/dates\";\r\nimport { getPerformanceListProps } from \"../interfaces/Services.types\";\r\n\r\nexport const loginService = async ({\r\n  email,\r\n  password,\r\n  isLoggedInHere,\r\n}: {\r\n  email: string;\r\n  password: string;\r\n  isLoggedInHere: number;\r\n}): Promise<AxiosResponse> => {\r\n  const response: AxiosResponse = await axios.post(\r\n    \"https://coreapi.hectorai.live/api/auth/login\",\r\n    {\r\n      email,\r\n      password,\r\n      isLoggedInHere,\r\n    }\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getMetricsList = async (): Promise<AxiosResponse> => {\r\n  const response: AxiosResponse = await apiManager.post(\r\n    \"/DayPartingFilterList\",\r\n    {\r\n      type: \"customizeMetrics\",\r\n    }\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getPerformanceList = async ({\r\n  metrics,\r\n}: getPerformanceListProps): Promise<AxiosResponse> => {\r\n  const response: AxiosResponse = await apiManager.post(\r\n    \"/DayPartingPerformanceGraphList\",\r\n    {\r\n      startDate: oneMonthAgo,\r\n      endDate: todayString,\r\n      metrics: metrics.length > 0 ? metrics : [\"CR_perc\", \"ACOS\", \"ROAS\"],\r\n    }\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getHeatMapList = async ({\r\n  metrics,\r\n}: getPerformanceListProps): Promise<AxiosResponse> => {\r\n  const response: AxiosResponse = await apiManager.post(\"/heatmap-list\", {\r\n    startDate: oneMonthAgo,\r\n    endDate: todayString,\r\n    metrics: metrics.length > 0 ? metrics : [\"CR_perc\", \"ACOS\", \"ROAS\"],\r\n  });\r\n  return response;\r\n};\r\n"],"names":["Login","credentials","setCredentials","useState","email","password","isLoading","setIsLoading","error","setError","context","useContext","AppContext","isLoggedIn","setIsLoggedIn","navigate","useNavigate","useEffect","onChangeCredentials","event","prevState","target","name","value","onSignIn","loginService","isLoggedInHere","then","response","_response$data","_response$data2","localStorage","setItem","JSON","stringify","data","token","userDetails","catch","err","_err$response","_err$response$data","_err$response3","_err$response3$data","_err$response4","_err$response4$data","_err$response2","_err$response2$data","message","finally","_jsx","Box","sx","width","height","minHeight","display","justifyContent","background","children","_jsxs","flexDirection","alignItems","pt","src","alt","style","paddingBottom","loading","Card","p","backgroundColor","border","borderRadius","Typography","variant","onSubmit","pb","boxSizing","px","DraftsOutlined","TextField","fullWidth","type","placeholder","onChange","py","LockOpenOutlined","minWidth","textAlign","color","cursor","alignSelf","Checkbox","size","Button","disabled","onClick","apiManager","axios","create","baseURL","headers","Authorization","async","_ref","post","getMetricsList","getPerformanceList","metrics","_ref2","startDate","oneMonthAgo","endDate","todayString","length","getHeatMapList","_ref3"],"sourceRoot":""}